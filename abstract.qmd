---
format: 
  pdf: 
    fontsize: 10pt
geometry: "margin=0.5in"
author: "Victoria Midkiff"
---

## title here

**Introduction**

Social media platforms such as Instagram offer users a way to reach wide audiences, and as such, many users and businesses aim to increase engagement on the platform. One key component of engagement is maximizing the number of likes a post receives relative to the number of followers the user has. One aspect of Instagram users and businesses have control over is the time of day at which they post. This begs the research question, does the hour of day at which an Instagram post is published affect its engagement, and what other factors are correlated with engagement? Other factors investigated include the type of post (carousel with multiple images or video post), if the post was published on a weekend, caption characteristics including length and the presence of hashtags or mentions in the caption, if a location was added, and account characteristics like follower count and following count.

The data used is a sample of over 8,000 public Instagram posts posted between September 2011 and February 2024 posted by 931 randomly sampled users across the world. Each observation is a single post. The original data included the number of likes it received, the number of users following and followed by the post's associated account at the time of posting, the account's username, and the post's caption. Instagram allows users to add a location to a post, but this is not required to publish one. This location data was also included, along with the time stamp at which the post was published. One post can include multiple images or videos, known as a carousel, and this was a boolean variable in the orignial data set. If the post included at least one video, this was indicated as well. The data was obtained from Kaggle and originally scraped from Instagram.
**ADD EDA HERE?**

**Methodology**

To ensure independence across observations, one post was randomly sampled per Instagram user, resulting in over 900 unique data points. From post captions and locations, variables for the hour of posting, whether the post was published on a weekend, caption length, presence of hashtags or user mentions, and indicators for video posts, carousels, and location tags were created. Follower count and following count 
at the time of posting were also included as predictors. The response variable, engagement, was defined as the ratio of likes to followers and then log-transformed to stabilize variance and meet the assumptions of linear regression.

A linear regression model was used to evaluate the relationship between post characteristics and engagement. The initial model (see Appendix Table 3) included all relevant predictors and several motivated interaction terms, such as between post type and hour of day, and between follower count and weekend indicator. Correlation analysis and variance inflation factors were performed and indicated that multicollinearity was not a concern. A modified automated backward selection process was applied to reduce the predictors in the model. The final model (see Table 1) was selected based on a combination of AIC, BIC, and relevance to the research question. Model assumptions (linearity, constant variance, normality of residuals, and independence) were checked and found to be reasonably satisfied through residual diagnostics and the data sampling strategy.

**Results**
```{r libraries}
#| echo: false
#| warning: false
#| message: false
# libraries

library(readr)
library(dplyr)
library(stringr)
library(corrplot)
library(car)
library(knitr)
library(broom)
library(ggplot2)
library(gridExtra)
library(kableExtra)
set.seed(25)
instagram <- read_csv("~/sta440-individual-project/data/instagram_clean.csv")
```
```{r model-selection}
#| include: false
#| warning: false
#| message: false

# make indicator variables
# log transform response variable

instagram$hour <- as.factor(instagram$hour)
instagram$weekend <- as.factor(instagram$weekend)
instagram$hashtag <- as.factor(instagram$hashtag)
instagram$tag <- as.factor(instagram$tag)
instagram$video <- as.factor(instagram$video)
instagram$multiple_images <- as.factor(instagram$multiple_images)
instagram$location <- as.factor(instagram$location)
instagram <- na.omit(instagram)
instagram$log_engagement <- log(instagram$engagement + 1e-4)

# create hour labels

hour_labels <- setNames(paste0(formatC(0:23 %% 12 + 1, width = 2, flag = "0"),
                               ifelse(0:23 < 12, "am", "pm"), "â€“",
                               formatC((1:24) %% 12 + 1, width = 2, flag = "0"),
                               ifelse(1:24 <= 12, "am", "pm")), 
                        paste0("hour", 1:23))

# model with all predictors 

instagram_model1 <- lm(log_engagement ~ followers + following + 
                         hour + weekend + caption_length + hashtag + tag + video + 
                         multiple_images + location + hour*video + hour*weekend + 
                         weekend*video + followers*weekend, data = instagram)

# model with all timing predictors and all significant

instagram_model2 <- step(instagram_model1, 
                         direction = "backward",
                         scope = list(lower = ~ followers + video + multiple_images + 
                                        hour + weekend),)
# model without timing predictors

instagram_model3 <- step(instagram_model1, 
                         direction = "backward")
```

**Discussion**

\newpage

## Detailed Methodology

Many users have multiple posts in the dataset, so the observations are not independent. To account for this, one post was randomly sampled per user. Over 900 data points were still retained. The data cleaning involved making several new variables to use as predictors for engagement. Based on the timestamps, a binary indicator indicating if the post was published on a weekend and a variable representing the hour of day the post was published were created (the baselines are not on a weekend and posted between 12 and 1 am). Based on the caption, the number of characters in the caption and binary indicators if the caption contained hashtags or user mentions were added (the baselines are no hashtags and no mentions). Additionally, an indicator variable representing a location added to the post was created. The variables indicating if a post was a video or if a post was a carousel were converted to factors. 

The response variable, engagement, was created by dividing the number of like a post received by the followers the posting account had at the time. Likes and follower count are naturally highly correlated, as users following account see a post in their feed, so more likes are expected. Using likes alone would favor accounts with larger followings, so this standardization allows for a fair comparison across posts from accounts of different sizes. Using the ratio of likes to followers captures the relative success of a post in terms of engagement, rather than absolute popularity. This was then log transformed (a small constant was added to avoid taking the logarithm of zero) to better satisfy the assumptions of linear regression, specifically normality of residuals and homoscedasticity. This transformation helps stabilize variance and reduce the strong skew present in the engagement distribution.

A linear model was chosen to investigate the relationship between post characteristics and engagement. Linear regression is well-suited for modeling continuous dependent variables, in this case, Instagram post engagement ratio, as a function of multiple continuous and categorical predictors. A beta regression model was also considered as it would be appropriate for modeling a ratio like engagement in this study. However, many posts in the data set had a ratio of 0, meaning the post received no likes. A beta regression cannot handle these values, and transformations to address this issue may make results less interpretable. Next, the correlation between all potential predictors was investigated as seen in Appendix Table 2. The Pearson correlation coefficients all had an absolute value less than 0.6, indicating multicollinearity was not a concern. The indicator and categorical variables were then encoded into factors. These variables included hour of day, whether the post was a video, whether it was a carousel, whether it was posted on a weekend, and whether the caption contained a hashtag, mention, or location.

These variables were all included in the initial model, along with the follower and following count, caption length and several interaction terms. This included one between each hour of day and video, as the hour of day may affect how much engagement videos receive. The interaction between each hour of day and if the post was published on the weekend was included to consider if daily patterns of engagement rate differ between weekends and weekdays. An interaction term between the number of followers and weekend was added to investigate if large accounts have more stable engagement on weekends and weekdays. This model is summarized in Appendix Table 3. The variance inflation factor for all predictors was less than 5, so backwards selection was then performed on this model. The backwards selection process was automated due to the high number (80) of predictors. The backwards selection was constrained to retain hour of day, weekend indicator, video and carousel indicators, and number of followers due to their importance in investigating the research question. The resulting model is summarized in Table 1. For the third model, these constraints were removed to further isolate significant predictors (see Appendix Table 4). To compare models, the AIC and BIC were compared for the three candidate models (Appendix Table 5). Although the third model had the lowest AIC and BIC values, the second model (Table 1) was chosen as the final model as it retained variables which are key to investigating the relationship between posting hour of day and engagement. 

The variance inflation factors of all predictors in the final model were confirmed to be less than 3 (see Appendix Table 6). The assumptions needed for the linear model were then assessed and determined to hold. The first assumption is linearity, in which the response variable has a linear relationship with the explanatory variables in the model. The second assumption is constant variance, in which the variance of the errors is constant regardless of what the predictor values are.  It can be seen that the points are randomly scattered around the horizontal axis at 0 in the scatterplot of residuals versus predicted values (Appendix Figure 2), meaning the regression models are linear in the parameters and this assumption is satisfied. After examining plots of the histogram of the residuals (Appendix figure 3) and Normal QQ plots (Appendix Figure 4), we can see that the third Normality assumption is satisfied, as the histograms both appear bell-shaped and symmetric with a center around 0 while in the QQ plots, the points lie approximately along the diagonal line. Independence is also met, as the posts are randomly sampled one post per user, which were randomly sampled. This ensured that each observation came from distinct Instagram accounts, removing within-user correlation may bias standard errors.

\newpage

```{r model-output}
#| echo: false
#| warning: false
#| message: false

# format model 2 (chosen model)

instagram_model2 |>
  tidy(conf.int = TRUE, conf.level = 0.95) |>
  select(term, estimate, conf.low, conf.high, p.value) |>
  mutate(term = case_when(
    term == "(Intercept)" ~ "Intercept",
    term == "followers" ~ "Number of followers",
    term == "caption_length" ~ "Caption length (characters)",
    term == "video1" ~ "Post is a video",
    term %in% names(hour_labels) ~ hour_labels[term],
    term == "multiple_images1" ~ "Post is a carousel",
    term == "weekend1" ~ "Posted on weekend",
    term == "hashtag1" ~ "Caption contains hashtag",

    grepl("^hour[0-9]+:video1$", term) ~ paste0(
      "Video Ã— ", hour_labels[gsub(":video1", "", term)]),
    grepl("^hour[0-9]+:weekend1$", term) ~ paste0(
      "Weekend Ã— ", hour_labels[gsub(":weekend1", "", term)]),
    term == "weekend1:video1" ~ "Video Ã— Weekend",
    term == "followers:weekend1" ~ "Followers Ã— Weekend",
    TRUE ~ term)) |>
  rename(
    "Exposure Variable" = term,
    "Estimate of Slope" = estimate,
    "95% CI Lower" = conf.low,
    "95% CI Upper" = conf.high,
    "P-Value" = p.value) |>
  mutate(across(
    where(is.numeric),
    ~ if_else(abs(.) < 0.001, "<0.001", sprintf("%.3f", .))
  ))|>
  kable(caption = "Regression Model of Instagram Engagement Using Post Characteristics and Time-of-Day Effects")
```

```{r visualization, fig.width=12}
#| echo: false
#| warning: false
#| message: false
instagram_df <- read_csv("~/sta440-individual-project/data/instagram_clean.csv")
instagram_df$log_engagement <- log(instagram_df$engagement + 1e-4)

# summarize by hour & post type
plot_data <- instagram_df %>%
  group_by(hour, video) %>%
  summarize(
    mean_log_eng = mean(log_engagement, na.rm = TRUE),
    se = sd(log_engagement, na.rm = TRUE) / sqrt(n()),
    .groups = "drop"
  )

# plot
ggplot(plot_data, aes(x = as.numeric(as.character(hour)),
                      y = mean_log_eng,
                      color = factor(video, levels = c(0, 1),
                                     labels = c("Post is not a video", 
                                                "Post is a video"))
                   )) +
  geom_line() +
  geom_point() +
  scale_x_continuous(breaks = 0:23) +
  labs(
    x = "Hour of Day",
    y = "Mean Log-Engagement",
    color = "Post Type",
    title = "Figure 1: Average Log-Engagement by Hour and Post Type"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(vjust = 0.5, size = 8),
    plot.title = element_text(size = 14),
    panel.grid.minor = element_blank()   
  )

```

\newpage 
## Appendix

```{r check-multicollinearity}
#| echo: false
#| warning: false
#| message: false
# correlation between predictors

name_lookup <- c(
  followers = "Number of followers",
  following = "Number of accounts following",
  hour = "Change in Right Impulse (NÂ·s)",
  weekend = "Posted on weekend",
  caption_length = "Caption length (characters)",
  hashtag = "Caption contains hashtag",
  tag = "Caption contains user tag",
  location = "Post has location tag", 
  video = "Post is a video",
  multiple_images = "Post is a carousel", 
  "weekend:video" = "Weekend Ã— Video",
  "followers:weekend" = "Followers Ã— Weekend"
)


predictors <- instagram_df[, c("followers", "following", "hour", 
                            "weekend", "caption_length", "hashtag", "tag", 
                            "location", "video", "multiple_images")]
cor_matrix <- cor(predictors, use = "complete.obs")


colnames(cor_matrix) <- name_lookup[colnames(cor_matrix)]
rownames(cor_matrix) <- name_lookup[rownames(cor_matrix)]
cor_matrix <- round(cor_matrix, digits = 3) 
kable(cor_matrix, caption = "Correlation between Model Predictors")
```

```{r alternative-models}
#| echo: false
#| warning: false
#| message: false
# model 1 (all variables)

instagram_model1 |>
  tidy(conf.int = TRUE, conf.level = 0.95) |>
  select(term, estimate, conf.low, conf.high, p.value) |>
  mutate(term = case_when(
    term == "(Intercept)" ~ "Intercept",
    term == "followers" ~ "Number of followers",
    term == "following" ~ "Number of accounts following",
    term == "caption_length" ~ "Caption length (characters)",
    term == "hashtag1" ~ "Caption contains hashtag",
    term == "tag1" ~ "Caption contains user tag",
    term == "video1" ~ "Post is a video",
    term == "multiple_images1" ~ "Post is a carousel",
    term == "weekend1" ~ "Posted on weekend",
    term == "location1" ~ "Post has location tag",
    term %in% names(hour_labels) ~ hour_labels[term],

    grepl("^hour[0-9]+:video1$", term) ~ paste0(
      "Video Ã— ", hour_labels[gsub(":video1", "", term)]),
    grepl("^hour[0-9]+:weekend1$", term) ~ paste0(
      "Weekend Ã— ", hour_labels[gsub(":weekend1", "", term)]),
    term == "weekend1:video1" ~ "Video Ã— Weekend",
    term == "followers:weekend1" ~ "Followers Ã— Weekend",
    TRUE ~ term
  )) |>
  rename(
    "Exposure Variable" = term,
    "Estimate of Slope" = estimate,
    "95% CI Lower" = conf.low,
    "95% CI Upper" = conf.high,
    "P-Value" = p.value) |>
  mutate(across(
    where(is.numeric),
    ~ if_else(abs(.) < 0.001, "<0.001", sprintf("%.3f", .))
  ))|>
  kable(caption = "Model 1: Regression Model of Instagram Engagement Using Post Characteristics and Time-of-Day Effects")

# format model 3 

instagram_model3 |>
  tidy(conf.int = TRUE, conf.level = 0.95) |>
  select(term, estimate, conf.low, conf.high, p.value) |>
  mutate(term = case_when(
    term == "(Intercept)" ~ "Intercept",
    term == "caption_length" ~ "Caption length (characters)",
    term == "weekend1" ~ "Posted on weekend",
    term == "video1" ~ "Post is a video",
    term == "weekend1:video1" ~ "Video Ã— Weekend",
    term == "hashtag1" ~ "Caption contains hashtag"
  )) |>
  rename(
    "Exposure Variable" = term,
    "Estimate of Slope" = estimate,
    "95% CI Lower" = conf.low,
    "95% CI Upper" = conf.high,
    "P-Value" = p.value) |>
  mutate(across(
    where(is.numeric),
    ~ if_else(abs(.) < 0.001, "<0.001", sprintf("%.3f", .))
  )) |>
  kable(caption = "Model 3: Regression Model of Instagram Engagement Using Post Characteristics and Time-of-Day Effects")
```

```{r model-comparison}
#| echo: false
#| warning: false
#| message: false

# aic and bic values
# need to choose one and indicate it

instagram_model_aic <- AIC(instagram_model1, instagram_model2, instagram_model3) 
instagram_model_bic <- BIC(instagram_model1, instagram_model2, instagram_model3) 

instagram_aic_bic <- data.frame(
  Model = rownames(instagram_model_aic),
  AIC = round(instagram_model_aic$AIC,3),
  BIC = round(instagram_model_bic$BIC,3)
) |> mutate(
  Model = case_when(
    Model == "instagram_model1" ~ "Candidate Model 1",
    Model == "instagram_model2" ~ "Candidate Model 2 (chosen model)",
    Model == "instagram_model3" ~ "Candidate Model 3"))

kable(instagram_aic_bic, caption = "AIC and BIC of Candidate Models")

instagram_vif <- vif(instagram_model2)
rownames(instagram_vif) <- name_lookup[rownames(instagram_vif)]
colnames(instagram_vif) <- c(
   "Generalized VIF", 
   "Df (Factor Levels - 1)", 
   "Scaled GVIF"
 )
kable(instagram_vif, caption = "VIFs for Chosen Regression Model")
```

```{r check-assumptions, fig.width=12}
#| echo: false
#| warning: false
#| message: false

# check linearity assumptions

instagram_model_aug <- augment(instagram_model2)

p1 <-ggplot(instagram_model_aug, aes(x = .fitted, y = .resid)) + 
  geom_point(size = 0.5) + 
  geom_hline(yintercept = 0, color = "darkred") + 
  labs(x = "Fitted (predicted) value", y = "Residual") + 
  theme_bw() +
  theme(aspect.ratio = 1)+
  ggtitle("Figure 2")

p2 <- ggplot(instagram_model_aug, aes(x = .resid)) + 
  geom_histogram(aes(y = ..density..), 
                     fill = "deepskyblue", color = "darkblue", bins = 25) + 
  stat_function(fun = dnorm, 
                args = list(mean = mean(instagram_model_aug$.resid),
                            sd = sd(instagram_model_aug$.resid)),
                color = "darkred", lwd = 1) +
  labs(x = "Residual", y = "Density") + 
  theme_bw() +
  theme(aspect.ratio = 1)+
  ggtitle("Figure 3")

p3 <- ggplot(instagram_model_aug, aes(sample = .resid)) +
  stat_qq(size = 0.5) + 
  stat_qq_line() + 
  theme_bw() + 
  labs(x = "Theoretical quantiles", 
       y = "Sample quantiles") +
  theme(aspect.ratio = 1) +
  ggtitle("Figure 4")

grid.arrange(p1, p2, p3, nrow = 1,
             top = "Checking Model Assumptions for Regression")
```
